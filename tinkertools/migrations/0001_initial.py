# Generated by Django 4.2.6 on 2024-03-01 18:39

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='AnimationMesh',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='AttackDefense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Criterion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value1', models.IntegerField()),
                ('value2', models.IntegerField()),
                ('operator', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ShopHash',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hash', models.CharField(verbose_name=4)),
                ('minLevel', models.IntegerField()),
                ('maxLevel', models.IntegerField()),
                ('baseAmount', models.IntegerField()),
                ('regenAmount', models.IntegerField()),
                ('regenInterval', models.IntegerField()),
                ('spawnChance', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Spell',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target', models.IntegerField()),
                ('tickCount', models.IntegerField()),
                ('tickInterval', models.IntegerField()),
                ('spellID', models.IntegerField()),
                ('spellFormat', models.CharField(max_length=512, null=True)),
                ('spellParams', models.JSONField(default=list)),
                ('criteria', models.ManyToManyField(to='tinkertools.criterion')),
            ],
        ),
        migrations.CreateModel(
            name='StatValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stat', models.IntegerField()),
                ('value', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='SpellData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.IntegerField()),
                ('spells', models.ManyToManyField(to='tinkertools.spell')),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aoid', models.IntegerField()),
                ('name', models.CharField(max_length=128)),
                ('description', models.CharField(max_length=8192)),
                ('is_nano', models.BooleanField(default=False)),
                ('animationMesh', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tinkertools.animationmesh')),
                ('atkdef', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tinkertools.attackdefense')),
                ('shopHash', models.ManyToManyField(to='tinkertools.shophash')),
                ('spellData', models.ManyToManyField(to='tinkertools.spelldata')),
                ('stats', models.ManyToManyField(to='tinkertools.statvalue')),
            ],
        ),
        migrations.AddField(
            model_name='attackdefense',
            name='attack',
            field=models.ManyToManyField(related_name='atkdef_attack', to='tinkertools.statvalue'),
        ),
        migrations.AddField(
            model_name='attackdefense',
            name='defense',
            field=models.ManyToManyField(related_name='atkdef_defense', to='tinkertools.statvalue'),
        ),
        migrations.AddField(
            model_name='animationmesh',
            name='animation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='animesh_animation', to='tinkertools.statvalue'),
        ),
        migrations.AddField(
            model_name='animationmesh',
            name='mesh',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='animesh_mesh', to='tinkertools.statvalue'),
        ),
        migrations.CreateModel(
            name='ActionCriterion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField()),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tinkertools.action')),
                ('criterion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tinkertools.criterion')),
            ],
        ),
        migrations.AddField(
            model_name='action',
            name='criteria',
            field=models.ManyToManyField(through='tinkertools.ActionCriterion', to='tinkertools.criterion'),
        ),
        migrations.AddField(
            model_name='action',
            name='item',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='actions', to='tinkertools.item'),
        ),
    ]
